// WIP PoC Jenkinsfile for pipeline script
// Vars required by multiple stages should be declared outside nodes
// because we need multiple nodes to support manual stages

def gradleCmd = '/usr/local/bin/gradle'
node {
    stage('Checkout Wrappers') {
      checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'CleanBeforeCheckout']], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/DanRoeSparks/gradle-wrappers.git']]])
    }
    stage('Clean Core') {
        sh "/usr/bin/rm -rf ./core-*"
    }
    if (env.DO_CHECKOUT == "YES") { 
      stage('Checkout') {
        // Run the gradle script
        sh "$gradleCmd main -b checkout.gradle"
        sh "$gradleCmd main -b core-checkout/checkout-core.gradle"
      }
    } else {
      println('Skipping Checkout Stage')
    }
    if (env.DO_BUILD == "YES") { 
      stage('Build') {
        // Run the gradle script
        sh "$gradleCmd main -b build.gradle"
        sh "$gradleCmd main -b core-build/build-core.gradle"
      }
    } else {
      println('Skipping Build Stage')
    }
}
// Manual stages outside nodes mean agents aren't held up waiting for approval
// Obviously this means potentially different agents/workspaces
// To trigger, use a call like:
// curl -X POST -d "json={proceed: 'Proceed'}" -d "proceed=Proceed" 'http[s]://[jenkins-url]/job/[job-name]/[build-number]/input/[input-id]/submit'
if (env.DO_DEPLOY == "YES" && env.MANUAL_APPROVE_DEPLOY == "YES") { 
  stage('Manual Approval') {
      input(id: 'UserInput', message: "Trigger Deployment?")
  }
} else {
  println('Skipping Manual Approval')
}
node {
  if (env.DO_DEPLOY == "YES") { 
    stage('Deploy') {
      // Run the gradle script
      sh "$gradleCmd main -b deploy.gradle"
      sh "$gradleCmd main -b core-deploy/deploy-core.gradle"
    }
  } else {
    println('Skipping Deploy Stage')
  }
}
